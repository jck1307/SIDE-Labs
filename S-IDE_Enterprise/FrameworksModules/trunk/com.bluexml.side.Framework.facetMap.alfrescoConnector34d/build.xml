<!--
    Copyright (C) 2007-2011  BlueXML - www.bluexml.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->


<project xmlns:artifact="antlib:org.apache.maven.artifact.ant" name="com.bluexml.side.Framework.facetMap.alfrescoConnectorcommunity" default="patchWebapps">
	<property file="${user.home}/build.properties" />
	<property file="build.${user.name}.properties" />
	<path id="maven-ant-tasks.classpath" path="maven-ant-tasks-2.0.10.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
	<artifact:pom id="mypom" file="pom.xml" />
	<property name="moduleId" value="${mypom.artifactId}" />
	<property name="webappName" value="facetmap" />
	<!-- ================================= 
	          target: name              
	         ================================= -->
	<target name="patchWebapps" depends="" description="build and install in local alfresco">
		<echo message="use maven to build package..." />
		<maven basedir="${basedir}" options="-P offline" goal="clean" resultproperty="maven.build.result" />
		<maven basedir="${basedir}" options="-P offline" goal="install" resultproperty="maven.build.result" />
		<!--<artifact:mvn pom="pom.xml" mavenHome="${maven.home}">
				<arg value="clean" />
				<arg value="package" />
			</artifact:mvn>
			-->
		<echo message="==========" />
		<echo message="patch the web application webapps.home=${webapps.home}" />

		<delete verbose="true">
			<fileset dir="${webapps.home}/${webappName}/WEB-INF/lib">
				<include name="${moduleId}-*.jar" />
			</fileset>
		</delete>

		<unzip dest="${webapps.home}/${webappName}" overwrite="true" src="target/${moduleId}-${mypom.version}.zip">
		</unzip>

		<!--
		<copy todir="${webapps.home}/${webappName}" overwrite="true" failonerror="false" verbose="true">
			<fileset dir="target/${moduleId}-${mypom.version}" id="id">
				<include name="**/**" />
			</fileset>
		</copy>
-->
		<echo message="==========" />
		<!--
			<echo message="clean project" />
			<artifact:mvn pom="pom.xml" mavenHome="${maven.home}">
				<arg value="clean" />
			</artifact:mvn>
			-->
		<!--<maven basedir="${basedir}" options="" goal="clean" resultproperty="maven.build.result" />-->
	</target>


	<!-- ================================= 
	          target: name              
	         ================================= -->
	<target name="maven_install" depends="" description="do mvn install">
		<!--<artifact:mvn pom="pom.xml" mavenHome="/usr/share/maven">
				<arg value="clean" />
				<arg value="install" />
			</artifact:mvn>
			-->
		<maven basedir="${basedir}" options="" goal="install" resultproperty="maven.build.result" />
	</target>

	<target name="maven_deploy" depends="" description="do mvn deploy">
		<maven basedir="${basedir}" options="-P public" goal="clean" resultproperty="maven.build.result" />
		<maven basedir="${basedir}" options="-P public" goal="deploy" resultproperty="maven.build.result" />
		<!--
			<artifact:mvn pom="pom.xml" mavenHome="${maven.home}">
				<arg value="clean" />
				<arg value="deploy" />
			</artifact:mvn>
			-->
	</target>

	<!-- ========
			we do not use artifact: to avoid jvm termination error
		 ======== -->
	<macrodef name="maven">
		<attribute name="options" default="" />
		<attribute name="goal" />
		<attribute name="basedir" />
		<attribute name="resultproperty" default="maven.result" />
		<element name="args" implicit="true" optional="true" />
		<sequential>
			<java classname="org.codehaus.classworlds.Launcher" fork="true" dir="@{basedir}" resultproperty="@{resultproperty}">
				<jvmarg value="-Xmx512m" />
				<classpath>
					<fileset dir="${maven.home}/boot">
						<include name="*.jar" />
					</fileset>
					<fileset dir="${maven.home}/lib">
						<include name="*.jar" />
					</fileset>
				</classpath>
				<sysproperty key="classworlds.conf" value="${maven.home}/bin/m2.conf" />
				<sysproperty key="maven.home" value="${maven.home}" />
				<arg line="--batch-mode @{options} @{goal}" />
			</java>
			<echo message="exit code : ${maven.build.result}" />
		</sequential>
	</macrodef>

</project>
