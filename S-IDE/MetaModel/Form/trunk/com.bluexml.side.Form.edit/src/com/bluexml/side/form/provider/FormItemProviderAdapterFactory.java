/*
    Copyright (C) 2007-2011  BlueXML - www.bluexml.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/


/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package com.bluexml.side.form.provider;

import com.bluexml.side.form.util.FormAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class FormItemProviderAdapterFactory extends FormAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public FormItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.FormGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormGroupItemProvider formGroupItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.FormGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormGroupAdapter() {
		if (formGroupItemProvider == null) {
			formGroupItemProvider = new FormGroupItemProvider(this);
		}

		return formGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.BooleanField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanFieldItemProvider booleanFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.BooleanField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanFieldAdapter() {
		if (booleanFieldItemProvider == null) {
			booleanFieldItemProvider = new BooleanFieldItemProvider(this);
		}

		return booleanFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.CharField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CharFieldItemProvider charFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.CharField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCharFieldAdapter() {
		if (charFieldItemProvider == null) {
			charFieldItemProvider = new CharFieldItemProvider(this);
		}

		return charFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.DateField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateFieldItemProvider dateFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.DateField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateFieldAdapter() {
		if (dateFieldItemProvider == null) {
			dateFieldItemProvider = new DateFieldItemProvider(this);
		}

		return dateFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.DateTimeField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateTimeFieldItemProvider dateTimeFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.DateTimeField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateTimeFieldAdapter() {
		if (dateTimeFieldItemProvider == null) {
			dateTimeFieldItemProvider = new DateTimeFieldItemProvider(this);
		}

		return dateTimeFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.DecimalField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecimalFieldItemProvider decimalFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.DecimalField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecimalFieldAdapter() {
		if (decimalFieldItemProvider == null) {
			decimalFieldItemProvider = new DecimalFieldItemProvider(this);
		}

		return decimalFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.FloatField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatFieldItemProvider floatFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.FloatField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatFieldAdapter() {
		if (floatFieldItemProvider == null) {
			floatFieldItemProvider = new FloatFieldItemProvider(this);
		}

		return floatFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.IntegerField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerFieldItemProvider integerFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.IntegerField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerFieldAdapter() {
		if (integerFieldItemProvider == null) {
			integerFieldItemProvider = new IntegerFieldItemProvider(this);
		}

		return integerFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.ModelChoiceField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelChoiceFieldItemProvider modelChoiceFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.ModelChoiceField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelChoiceFieldAdapter() {
		if (modelChoiceFieldItemProvider == null) {
			modelChoiceFieldItemProvider = new ModelChoiceFieldItemProvider(this);
		}

		return modelChoiceFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.EmailField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmailFieldItemProvider emailFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.EmailField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmailFieldAdapter() {
		if (emailFieldItemProvider == null) {
			emailFieldItemProvider = new EmailFieldItemProvider(this);
		}

		return emailFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.FileField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileFieldItemProvider fileFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.FileField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileFieldAdapter() {
		if (fileFieldItemProvider == null) {
			fileFieldItemProvider = new FileFieldItemProvider(this);
		}

		return fileFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.ImageField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageFieldItemProvider imageFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.ImageField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageFieldAdapter() {
		if (imageFieldItemProvider == null) {
			imageFieldItemProvider = new ImageFieldItemProvider(this);
		}

		return imageFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.TimeField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeFieldItemProvider timeFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.TimeField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeFieldAdapter() {
		if (timeFieldItemProvider == null) {
			timeFieldItemProvider = new TimeFieldItemProvider(this);
		}

		return timeFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.URLField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected URLFieldItemProvider urlFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.URLField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createURLFieldAdapter() {
		if (urlFieldItemProvider == null) {
			urlFieldItemProvider = new URLFieldItemProvider(this);
		}

		return urlFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.PhoneNumberField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhoneNumberFieldItemProvider phoneNumberFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.PhoneNumberField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhoneNumberFieldAdapter() {
		if (phoneNumberFieldItemProvider == null) {
			phoneNumberFieldItemProvider = new PhoneNumberFieldItemProvider(this);
		}

		return phoneNumberFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.FormAspect} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormAspectItemProvider formAspectItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.FormAspect}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormAspectAdapter() {
		if (formAspectItemProvider == null) {
			formAspectItemProvider = new FormAspectItemProvider(this);
		}

		return formAspectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.FormClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormClassItemProvider formClassItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.FormClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormClassAdapter() {
		if (formClassItemProvider == null) {
			formClassItemProvider = new FormClassItemProvider(this);
		}

		return formClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.Reference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceItemProvider referenceItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.Reference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceAdapter() {
		if (referenceItemProvider == null) {
			referenceItemProvider = new ReferenceItemProvider(this);
		}

		return referenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.ChoiceField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChoiceFieldItemProvider choiceFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.ChoiceField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChoiceFieldAdapter() {
		if (choiceFieldItemProvider == null) {
			choiceFieldItemProvider = new ChoiceFieldItemProvider(this);
		}

		return choiceFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.RegexField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegexFieldItemProvider regexFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.RegexField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRegexFieldAdapter() {
		if (regexFieldItemProvider == null) {
			regexFieldItemProvider = new RegexFieldItemProvider(this);
		}

		return regexFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.PasswordField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PasswordFieldItemProvider passwordFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.PasswordField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPasswordFieldAdapter() {
		if (passwordFieldItemProvider == null) {
			passwordFieldItemProvider = new PasswordFieldItemProvider(this);
		}

		return passwordFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.VirtualField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VirtualFieldItemProvider virtualFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.VirtualField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVirtualFieldAdapter() {
		if (virtualFieldItemProvider == null) {
			virtualFieldItemProvider = new VirtualFieldItemProvider(this);
		}

		return virtualFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.ActionField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionFieldItemProvider actionFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.ActionField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionFieldAdapter() {
		if (actionFieldItemProvider == null) {
			actionFieldItemProvider = new ActionFieldItemProvider(this);
		}

		return actionFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.TextField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextFieldItemProvider textFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.TextField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextFieldAdapter() {
		if (textFieldItemProvider == null) {
			textFieldItemProvider = new TextFieldItemProvider(this);
		}

		return textFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.FormSearch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormSearchItemProvider formSearchItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.FormSearch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormSearchAdapter() {
		if (formSearchItemProvider == null) {
			formSearchItemProvider = new FormSearchItemProvider(this);
		}

		return formSearchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.NumericalField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumericalFieldItemProvider numericalFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.NumericalField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumericalFieldAdapter() {
		if (numericalFieldItemProvider == null) {
			numericalFieldItemProvider = new NumericalFieldItemProvider(this);
		}

		return numericalFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.StaticText} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticTextItemProvider staticTextItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.StaticText}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticTextAdapter() {
		if (staticTextItemProvider == null) {
			staticTextItemProvider = new StaticTextItemProvider(this);
		}

		return staticTextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.SearchFormCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SearchFormCollectionItemProvider searchFormCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.SearchFormCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSearchFormCollectionAdapter() {
		if (searchFormCollectionItemProvider == null) {
			searchFormCollectionItemProvider = new SearchFormCollectionItemProvider(this);
		}

		return searchFormCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.SearchField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SearchFieldItemProvider searchFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.SearchField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSearchFieldAdapter() {
		if (searchFieldItemProvider == null) {
			searchFieldItemProvider = new SearchFieldItemProvider(this);
		}

		return searchFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.NumericalSearchField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumericalSearchFieldItemProvider numericalSearchFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.NumericalSearchField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumericalSearchFieldAdapter() {
		if (numericalSearchFieldItemProvider == null) {
			numericalSearchFieldItemProvider = new NumericalSearchFieldItemProvider(this);
		}

		return numericalSearchFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.CharSearchField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CharSearchFieldItemProvider charSearchFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.CharSearchField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCharSearchFieldAdapter() {
		if (charSearchFieldItemProvider == null) {
			charSearchFieldItemProvider = new CharSearchFieldItemProvider(this);
		}

		return charSearchFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.DateSearchField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateSearchFieldItemProvider dateSearchFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.DateSearchField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateSearchFieldAdapter() {
		if (dateSearchFieldItemProvider == null) {
			dateSearchFieldItemProvider = new DateSearchFieldItemProvider(this);
		}

		return dateSearchFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.ChoiceSearchField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChoiceSearchFieldItemProvider choiceSearchFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.ChoiceSearchField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChoiceSearchFieldAdapter() {
		if (choiceSearchFieldItemProvider == null) {
			choiceSearchFieldItemProvider = new ChoiceSearchFieldItemProvider(this);
		}

		return choiceSearchFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.FileSearchField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileSearchFieldItemProvider fileSearchFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.FileSearchField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileSearchFieldAdapter() {
		if (fileSearchFieldItemProvider == null) {
			fileSearchFieldItemProvider = new FileSearchFieldItemProvider(this);
		}

		return fileSearchFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.BooleanSearchField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanSearchFieldItemProvider booleanSearchFieldItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.BooleanSearchField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanSearchFieldAdapter() {
		if (booleanSearchFieldItemProvider == null) {
			booleanSearchFieldItemProvider = new BooleanSearchFieldItemProvider(this);
		}

		return booleanSearchFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.WorkflowFormCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkflowFormCollectionItemProvider workflowFormCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.WorkflowFormCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkflowFormCollectionAdapter() {
		if (workflowFormCollectionItemProvider == null) {
			workflowFormCollectionItemProvider = new WorkflowFormCollectionItemProvider(this);
		}

		return workflowFormCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.ClassFormCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassFormCollectionItemProvider classFormCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.ClassFormCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassFormCollectionAdapter() {
		if (classFormCollectionItemProvider == null) {
			classFormCollectionItemProvider = new ClassFormCollectionItemProvider(this);
		}

		return classFormCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.bluexml.side.form.FormWorkflow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormWorkflowItemProvider formWorkflowItemProvider;

	/**
	 * This creates an adapter for a {@link com.bluexml.side.form.FormWorkflow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormWorkflowAdapter() {
		if (formWorkflowItemProvider == null) {
			formWorkflowItemProvider = new FormWorkflowItemProvider(this);
		}

		return formWorkflowItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (formGroupItemProvider != null) formGroupItemProvider.dispose();
		if (workflowFormCollectionItemProvider != null) workflowFormCollectionItemProvider.dispose();
		if (classFormCollectionItemProvider != null) classFormCollectionItemProvider.dispose();
		if (formWorkflowItemProvider != null) formWorkflowItemProvider.dispose();
		if (formClassItemProvider != null) formClassItemProvider.dispose();
		if (booleanFieldItemProvider != null) booleanFieldItemProvider.dispose();
		if (charFieldItemProvider != null) charFieldItemProvider.dispose();
		if (dateFieldItemProvider != null) dateFieldItemProvider.dispose();
		if (dateTimeFieldItemProvider != null) dateTimeFieldItemProvider.dispose();
		if (decimalFieldItemProvider != null) decimalFieldItemProvider.dispose();
		if (floatFieldItemProvider != null) floatFieldItemProvider.dispose();
		if (integerFieldItemProvider != null) integerFieldItemProvider.dispose();
		if (modelChoiceFieldItemProvider != null) modelChoiceFieldItemProvider.dispose();
		if (emailFieldItemProvider != null) emailFieldItemProvider.dispose();
		if (fileFieldItemProvider != null) fileFieldItemProvider.dispose();
		if (imageFieldItemProvider != null) imageFieldItemProvider.dispose();
		if (timeFieldItemProvider != null) timeFieldItemProvider.dispose();
		if (urlFieldItemProvider != null) urlFieldItemProvider.dispose();
		if (phoneNumberFieldItemProvider != null) phoneNumberFieldItemProvider.dispose();
		if (formAspectItemProvider != null) formAspectItemProvider.dispose();
		if (referenceItemProvider != null) referenceItemProvider.dispose();
		if (choiceFieldItemProvider != null) choiceFieldItemProvider.dispose();
		if (regexFieldItemProvider != null) regexFieldItemProvider.dispose();
		if (passwordFieldItemProvider != null) passwordFieldItemProvider.dispose();
		if (virtualFieldItemProvider != null) virtualFieldItemProvider.dispose();
		if (actionFieldItemProvider != null) actionFieldItemProvider.dispose();
		if (textFieldItemProvider != null) textFieldItemProvider.dispose();
		if (formSearchItemProvider != null) formSearchItemProvider.dispose();
		if (numericalFieldItemProvider != null) numericalFieldItemProvider.dispose();
		if (staticTextItemProvider != null) staticTextItemProvider.dispose();
		if (searchFormCollectionItemProvider != null) searchFormCollectionItemProvider.dispose();
		if (searchFieldItemProvider != null) searchFieldItemProvider.dispose();
		if (numericalSearchFieldItemProvider != null) numericalSearchFieldItemProvider.dispose();
		if (charSearchFieldItemProvider != null) charSearchFieldItemProvider.dispose();
		if (dateSearchFieldItemProvider != null) dateSearchFieldItemProvider.dispose();
		if (choiceSearchFieldItemProvider != null) choiceSearchFieldItemProvider.dispose();
		if (fileSearchFieldItemProvider != null) fileSearchFieldItemProvider.dispose();
		if (booleanSearchFieldItemProvider != null) booleanSearchFieldItemProvider.dispose();
	}

}
