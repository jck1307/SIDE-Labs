<!--
    Copyright (C) 2007-2011  BlueXML - www.bluexml.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->


<project default="main" name="Enterprise RCP Builder">
	<property file="build.${user.name}.properties" />
	<property name="buildDirectory" value="${builder}/buildDirectory" />
	<property name="pluginPath" value="${moreplugins}${path.separator}${sideSources}${path.separator}${deltapack}" />
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="../lib/xmltask.jar" />

	<target name="main">
		<!-- clean prevous build -->
		<delete dir="${distros}" />
		<mkdir dir="${distros}" />
		<!-- by default, check for deltapack co-located with eclipse -->

		<!-- Check that we have a deltapack -->
		<available property="haveDeltaPack" file="${deltapack}" />
		<fail unless="haveDeltaPack" message="The deltapack is required to build this product.  Please edit buildProduct.xml or set the &quot;deltapack&quot; property." />
		<echoproperties />
		<echo message="builder : ${eclipse.pdebuild.scripts}/productBuild/productBuild.xml" />
		<ant antfile="${eclipse.pdebuild.scripts}/productBuild/productBuild.xml" />
		<antcall target="fixArchives" />
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
          target: fixArchives                      
         - - - - - - - - - - - - - - - - - -->
	<target name="fixArchives">
		<mkdir dir="${distros}" />
		<move todir="${distros}" overwrite="true" verbose="true">
			<fileset dir="${buildDirectory}/${buildLabel}">
				<include name="*.zip" />
				<include name="*.tar.gz" />
			</fileset>
		</move>
		<antcall target="fixExecutalbeBit_MacOS" />
		<antcall target="fixExecutalbeBit_Linux" />
		<!-- get product version -->
		<echo message="get version from ${product}" />
		<xmltask source="${product}">
			<cut path="/product/@version" property="productVersion" />
		</xmltask>
		<echo message="product version : ${productVersion}">
		</echo>
		<!-- update buildId -->
		<property name="newBuildId" value="${buildId}_${productVersion}" />
		<move tofile="${distros}/${newBuildId}-win32.win32.x86.zip" file="${distros}/${buildId}-win32.win32.x86.zip" />
		<move tofile="${distros}/${newBuildId}-linux.gtk.x86.zip" file="${distros}/${buildId}-linux.gtk.x86.zip" />
		<move tofile="${distros}/${newBuildId}-macosx.carbon.x86.zip" file="${distros}/${buildId}-macosx.carbon.x86.zip" />
		<echo level="info" message="${newBuildId}" file="${distros}/buildID.txt" />
	</target>


	<target name="fixExecutalbeBit_MacOS">
		<echo message="Fix executable bit" />
		<delete dir="${builder}_tmp" includeemptydirs="true" failonerror="false">
		</delete>
		<unzip dest="${builder}_tmp" src="${distros}/${buildId}-macosx.carbon.x86.zip">
		</unzip>
		<!-- startup argument is missing and this disable RCP to update so we override the side.ini-->
		<copy file="side.ini" tofile="${builder}_tmp/${archivePrefix}/${launcherName}.app/Contents/MacOS/${launcherName}.ini" verbose="true" overwrite="true"/>
		<zip destfile="${distros}/${buildId}-macosx.carbon.x86.zip" update="false">
			<zipfileset prefix="${archivePrefix}" dir="${builder}_tmp/${archivePrefix}" id="id" filemode="777">
				<include name="${launcherName}.app/Contents/MacOS/${launcherName}" />
			</zipfileset>
			<zipfileset prefix="${archivePrefix}" dir="${builder}_tmp/${archivePrefix}" id="id2">
				<exclude name="${launcherName}.app/Contents/MacOS/${launcherName}" />
			</zipfileset>
		</zip>
	</target>
	<target name="fixExecutalbeBit_Linux">
		<echo message="Fix executable bit" />
		<delete dir="${builder}_tmp" includeemptydirs="true" failonerror="false">
		</delete>
		<unzip dest="${builder}_tmp" src="${distros}/${buildId}-linux.gtk.x86.zip">
		</unzip>
		<zip destfile="${distros}/${buildId}-linux.gtk.x86.zip" update="false">
			<zipfileset prefix="${archivePrefix}" dir="${builder}_tmp/${archivePrefix}" id="id" filemode="777">
				<include name="${launcherName}" />
			</zipfileset>
			<zipfileset prefix="${archivePrefix}" dir="${builder}_tmp/${archivePrefix}" id="id2">
				<exclude name="${launcherName}" />
			</zipfileset>
		</zip>
	</target>


	<target name="pde-build2" description="call this target to execute main task using Eclipse antRunner">
		<echo message="launcher path :${baseLocation}/plugins/org.eclipse.equinox.launcher_${equinoxLauncherPluginVersion}.jar">
		</echo>
		<delete file="${logFile}" failonerror="false" />
		<record name="${logFile}" loglevel="debug" action="start" />
		<java fork="true" failonerror="true" jar="${baseLocation}/plugins/org.eclipse.equinox.launcher_${equinoxLauncherPluginVersion}.jar">
			<arg value="-Xmx512m" />
			<arg value="-Xms512m" />
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-buildfile" />
			<arg value="build.xml" />
			<arg value="-Dtimestamp=${timestamp}" />
			<arg value="-Dworkspace=${workspace}" />
			<classpath>
				<pathelement location="${baseLocation}/plugins/org.eclipse.equinox.launcher_${equinoxLauncherPluginVersion}.jar" />
			</classpath>
		</java>
		<record name="${logFile}" action="stop" />
	</target>
</project>
