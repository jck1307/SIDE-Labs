#     Copyright (C) 2007-2011  BlueXML - www.bluexml.com
# 
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.



###############################################################################
# Copyright (c) 2003, 2006 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################


######### FOR LINUX ! ! ! #############


########### REPOSITORY ################
repository=http://www.bluexml.com/svn/private/
#repository=http://svn.bluexml.com/svn/bluexml/com/
#repository=https://stage2:8443/svn/BuildTest/trunk/

########### FINAL DIRECTORY PATH ################
# finalDirectory where to copy the logs and doc
#finalDirectory=/home/stager/share/SIDE/SIDE-Alfresco
finalDirectory=/var/www/pipin/html/devel/SIDE-Alfresco

########### PUBLIC UPDATE-SITE PATH ################
#ATTENTION ! ne pas mettre de '/' a la fin
# publicUpdateSiteDirectory=/home/stager/share/SIDE-Final
# local update site
updateSiteDir=/var/www/pipin/html/devel/SIDE-Alfresco
#updateSiteDir=/home/stager/share/Update-Site/SIDE-Alfresco/
#updateSiteDirLabs=/home/stager/share/Update-Site/SIDE-Labs/

########### COPYRIGHT & LICENCE ################

copyrightPath=/var/opt/hudson/jobs/Build_SIDE/buildAuto/Ankle/copyright.txt
#copyrightPath=/root/.hudson/jobs/Build_SIDE/buildAuto/Ankle/copyright.txt
copyrightURL=http://www.bluexml.com

licensePath=/var/opt/hudson/jobs/Build_SIDE/buildAuto/Ankle/licence.txt
#licensePath=/root/.hudson/jobs/Build_SIDE/buildAuto/Ankle/licence.txt
licenseURL=http://www.gnu.org/licenses/gpl.html


########### NUMBER VERSION PATTERN ################
# This pattern allows to increment(u), force(#) or do nothing(n) for each number.
#  For instance:
#  - the pattern 'n.n.u'  indicates to only increment the third number to ship a patch.
#  - the pattern 'n.u.n' indicates to only increment the second number to ship a corrective package.
#  - the pattern '#.n.n' indicates to force the fisrt numebt to ship a new major release with the number #.
#  - current version 1.0.12 and pattern 'n.n.u' => new version 1.0.13
#  - current version 1.0.12 and pattern 'n.u.u' => new version 1.1.0
#  - current version 1.0.12 and pattern 'n.u.3' => new version 1.1.3
#  - current version 1.0.12 and pattern '2.0.0' => new version 2.0.0
#
#############################################
number-pattern=n.n.u

############ FORCE NUMBER VERSION ##############
# forceNumberVersion is used to mark all projects
# as updated so version number will be updated
# default value is false
#############################################
forceNumberVersion=false


############ PROJECT LIST ################
# Put here the project list in this form
# Category&project.name,\
# don't forgive the ',\' at the end of each line
############################################

project=Deployer&com.bluexml.side.Deployer.alfresco,\
Deployer&com.bluexml.side.Deployer.alfresco.feature,\
Deployer&com.bluexml.side.Deployer.documentation,\
Deployer&com.bluexml.side.Deployer.documentation.feature,\
Deployer&com.bluexml.side.Deployer.facetMap,\
Deployer&com.bluexml.side.Deployer.facetMap.feature,\
Deployer&com.bluexml.side.Deployer.facetMapMultiTypes,\
Deployer&com.bluexml.side.Deployer.report,\
Deployer&com.bluexml.side.Deployer.report.feature,\
Deployer&com.bluexml.side.Deployer.xforms,\
Deployer&com.bluexml.side.Deployer.xforms.feature,\
Deployer&com.bluexml.side.Deployer.xformsDirectCopy.feature,\
Deployer&com.bluexml.side.Deployer.xformsDirectCopy,\
Deployer&com.bluexml.side.Deployer.alfrescoDirectCopy,\
Deployer&com.bluexml.side.Deployer.alfrescoDirectCopy.feature,\
Deployer&com.bluexml.side.Deployer.antDeployer,\
MetaModel/Application&com.bluexml.side.Application,\
MetaModel/Application&com.bluexml.side.Application.startup,\
MetaModel/Application&com.bluexml.side.Application.edit,\
MetaModel/Application&com.bluexml.side.Application.editor,\
MetaModel/Application&com.bluexml.side.Application.feature,\
MetaModel/Application&com.bluexml.side.Application.ui,\
MetaModel/Class&com.bluexml.side.Class,\
MetaModel/Class&com.bluexml.side.Class.edit,\
MetaModel/Class&com.bluexml.side.Class.edit.ui,\
MetaModel/Class&com.bluexml.side.Class.editor,\
MetaModel/Class&com.bluexml.side.Class.service.alfresco,\
MetaModel/Class&com.bluexml.side.Class.generator.alfresco,\
MetaModel/Class&com.bluexml.side.Class.generator.alfresco.feature,\
MetaModel/Class&com.bluexml.side.Class.generator.documentation,\
MetaModel/Class&com.bluexml.side.Class.generator.report,\
MetaModel/Class&com.bluexml.side.Class.generator.report.feature,\
MetaModel/Class&com.bluexml.side.Class.modeler,\
MetaModel/Class&com.bluexml.side.Class.modeler.feature,\
MetaModel/Common&com.bluexml.side.Common,\
MetaModel/Common&com.bluexml.side.Common.edit,\
MetaModel/Common&com.bluexml.side.Common.feature,\
MetaModel/Form&com.bluexml.side.Form,\
MetaModel/Form&com.bluexml.side.Form.edit,\
MetaModel/Form&com.bluexml.side.Form.edit.ui,\
MetaModel/Form&com.bluexml.side.Form.editor,\
MetaModel/Form&com.bluexml.side.Form.feature,\
MetaModel/Form&com.bluexml.side.Form.generator.documentation,\
MetaModel/Form&com.bluexml.side.Form.generator.xforms.worker,\
MetaModel/Form&com.bluexml.side.Form.generator.xforms.feature,\
MetaModel/Form&com.bluexml.side.Util.maven2.embeded,\
MetaModel/Portal&com.bluexml.side.Portal,\
MetaModel/Portal&com.bluexml.side.Portal.edit,\
MetaModel/Portal&com.bluexml.side.Portal.editor,\
MetaModel/Portal&com.bluexml.side.Portal.generator.alfresco,\
MetaModel/Portal&com.bluexml.side.Portal.generator.alfresco.feature,\
MetaModel/Portal&com.bluexml.side.Portal.modeler,\
MetaModel/Portal&com.bluexml.side.Portal.modeler.feature,\
MetaModel/Requirements&com.bluexml.side.Requirements,\
MetaModel/Requirements&com.bluexml.side.Requirements.edit,\
MetaModel/Requirements&com.bluexml.side.Requirements.editor,\
MetaModel/Requirements&com.bluexml.side.Requirements.feature,\
MetaModel/Requirements&com.bluexml.side.Requirements.modeler,\
MetaModel/Requirements&com.bluexml.side.Requirements.generator,\
MetaModel/View&com.bluexml.side.View,\
MetaModel/View&com.bluexml.side.View.edit,\
MetaModel/View&com.bluexml.side.View.edit.ui,\
MetaModel/View&com.bluexml.side.View.editor,\
MetaModel/View&com.bluexml.side.View.feature,\
MetaModel/View&com.bluexml.side.View.generator.alfresco,\
MetaModel/View&com.bluexml.side.View.generator.alfresco.feature,\
MetaModel/View&com.bluexml.side.View.generator.documentation,\
MetaModel/View&com.bluexml.side.View.generator.facetmap,\
MetaModel/View&com.bluexml.side.View.generator.facetmap.feature,\
MetaModel/Workflow&com.bluexml.side.Workflow,\
MetaModel/Workflow&com.bluexml.side.Workflow.edit,\
MetaModel/Workflow&com.bluexml.side.Workflow.edit.ui,\
MetaModel/Workflow&com.bluexml.side.Workflow.editor,\
MetaModel/Workflow&com.bluexml.side.Workflow.generator.alfresco,\
MetaModel/Workflow&com.bluexml.side.Workflow.generator.alfresco.feature,\
MetaModel/Workflow&com.bluexml.side.Workflow.generator.documentation,\
MetaModel/Workflow&com.bluexml.side.Workflow.modeler,\
MetaModel/Workflow&com.bluexml.side.Workflow.modeler.actions,\
MetaModel/Workflow&com.bluexml.side.Workflow.modeler.feature,\
Util&com.bluexml.side.Util.dependencies,\
Util&com.bluexml.side.Util.deployer,\
Util&com.bluexml.side.Util.deployer.war,\
Util&com.bluexml.side.Util.ecore,\
Util&com.bluexml.side.Util.feature,\
Util&com.bluexml.side.Util.feedback,\
Util&com.bluexml.side.Util.feedback.startup,\
Util&com.bluexml.side.Util.generator,\
Util&com.bluexml.side.Util.generator.acceleo,\
Util&com.bluexml.side.Util.generator.alfresco,\
Util&com.bluexml.side.Util.generator.documentation,\
Util&com.bluexml.side.Util.libs,\
Util&com.bluexml.side.Util.log,\
Util&com.bluexml.side.Util.metaModel.validate,\
Util&com.bluexml.side.Util.model.merge,\
Util&com.bluexml.side.Util.security,\
Util&com.bluexml.side.Util.componentMonitor,\
Integration&com.bluexml.side.Integration.eclipse.branding,\
Integration&com.bluexml.side.Integration.eclipse.builder,\
Integration&com.bluexml.side.Integration.standAlone.metamodel.documentation,\
Integration&com.bluexml.side.Integration.standAlone,\
MetaModel/Common&com.bluexml.side.Common.core.feature,\
MetaModel/Common&com.bluexml.side.Common.sideForAlfresco.feature


#MetaModel/Portal&com.bluexml.side.Portal.generator.facetMap,\
#MetaModel/Portal&com.bluexml.side.Portal.generator.facetMap.feature,\

############ PROJECT LIST ################
# Put here the project list in this form to be excluded of the entreprise update site
# !!! On a single line !!!
############################################
projectExcluded=

############ PROJECT TO VERSIONED LIST ################
# Put here the project list in this form
# Category&project.name,\
# don't forgive the ',\' at the end of each line
# / ! \ This projects will not be build !!
############################################
projectToVersioned=

############ NEW CATEGORY ################
# Put here the name of the new Category for the site.xml
# for the new projects
############################################
newCategory=Utils

#####################
# Parameters describing how and where to execute the build.
# Typical users need only update the following properties:
#    baseLocation - where things you are building against are installed
#    bootclasspath - The base jars to compile against (typicaly rt.jar)
#    configs - the list of {os, ws, arch} configurations to build.
#
# Of course any of the settings here can be overridden by spec'ing
# them on the command line (e.g., -DbaseLocation=d:/eclipse

############# PLUG-IN VERSIONS ######################
#
# Look in the plugins directory of your Eclipse
# installation to determine the version numbers
# the correct version numbers. These version numbers
# are used to create the correct paths when launching
# PDE Build.
#
#####################################################

# Version of org.ecilpse.pdebuild
#pdeBuildPluginVersion=3.4.1.R34x_v20081217
pdeBuildPluginVersion=3.5.0.v20090527-1800

# Version of org.eclipse.equinox.launcher
#equinoxLauncherPluginVersion=1.0.101.R34x_v20081125
equinoxLauncherPluginVersion=1.0.200.v20090520

# Version of org.eclipse.equinox.launcher folder
#equinoxLauncherDirectoryVersion=gtk.linux.x86_1.0.101.R34x_v20080805
equinoxLauncherDirectoryVersion=gtk.linux.x86_1.0.200.v20090520

############# ECLIPSE LOCATION ######################
#
# Specify the directory of the Eclipse installation
# that will be used to execute PDE Build.
#
#####################################################

#eclipseLocation=/home/stager/buildAuto/eclipse
#eclipseLocation=/root/.hudson/eclipse/Topcased-3.0.1
eclipseLocation=/var/opt/hudson/eclipse/Topcased-3.0.1
############# PRODUCT/PACKAGING CONTROL #############
product=./buildAuto.product
runPackager=true

#Set the name of the archive that will result from the product build.
#archiveNamePrefix=

# The prefix that will be used in the generated archive.
archivePrefix=Update-Site

# The location underwhich all of the build output will be collected.
collectingFolder=${archivePrefix}

# The list of {os, ws, arch} configurations to build.  This
# value is a '&' separated list of ',' separate triples.  For example,
#     configs=win32,win32,x86 & linux,motif,x86
# By default the value is *,*,*
#configs = *, *, *
configs=linux, gtk, x86
##& \
#	linux, gtk, ppc &\
# 	linux, gtk, x86 & \
#	linux, gtk, x86_64 & \
#	linux, motif, x86 & \
#	solaris, motif, sparc & \
#	solaris, gtk, sparc & \
#	aix, motif, ppc & \
#	hpux, motif, PA_RISC & \
#	macosx, carbon, ppc

# By default PDE creates one archive (result) per entry listed in the configs property.
# Setting this value to try will cause PDE to only create one output containing all
# artifacts for all the platforms listed in the configs property.
#groupConfigurations=true

#The format of the archive. By default a zip is created using antZip.
#The list can only contain the configuration for which the desired format is different than zip.
#archivesFormat=win32, win32, x86 - antZip& \
#	linux, gtk, ppc - antZip &\
#    linux, gtk, x86 - antZip& \
#	linux, gtk, x86_64 - antZip& \
# linux, motif, x86 - antZip& \
#	solaris, motif, sparc - antZip& \
#	solaris, gtk, sparc - antZip& \
#	aix, motif, ppc - antZip& \
#	hpux, motif, PA_RISC - antZip& \
#	macosx, carbon, ppc - antZip

#Set to true if you want the output to be ready for an update jar (no site.xml generated)
#outputUpdateJars = false

#Set to true for Jnlp generation
#codebase should be a URL that will be used as the root of all relative URLs in the output.
#generateJnlp=false
#jnlp.codebase=<codebase url>
#jnlp.j2se=<j2se version>
#jnlp.locale=<a locale>
#jnlp.generateOfflineAllowed=true or false generate <offlineAllowed/> attribute in the generated features
#jnlp.configs=${configs}			#uncomment to filter the content of the generated jnlp files based on the configuration being built

#Set to true if you want to sign jars
#signJars=false
#sign.alias=<alias>
#sign.keystore=<keystore location>
#sign.storepass=<keystore password>

#Arguments to send to the zip executable
zipargs=

#Arguments to send to the tar executable
tarargs=

#Control the creation of a file containing the version included in each configuration - on by default
#generateVersionsLists=false

############## BUILD NAMING CONTROL ################
# The directory into which the build elements are fetched and where
# the build takes place.
buildName=workingcopy
#ATTENTION ! ne pas mettre de '/' a la fin
#buildDir=/home/stager/buildAuto
#buildDir=/root/.hudson/jobs/Build_SIDE/buildAuto
buildDir=/var/opt/hudson/jobs/Build_SIDE/buildAuto
buildDirectory=${buildDir}/${codeName}/${buildName}

# Type of build.  Used in naming the build output.  Typically this value is
# one of I, N, M, S, ...
buildType=I

# ID of the build.  Used in naming the build output.
buildId=UpdateSite

# CodeName
codeName=Ankle

# Label for the build.  Used in naming the build output
buildLabel=${buildType}.${buildId}

# Timestamp for the build.  Used in naming the build output
timestamp=007

#The value to be used for the qualifier of a plugin or feature when you want to override the value computed by pde.
#The value will only be applied to plugin or features indicating build.properties, qualifier = context
#forceContextQualifier=<the value for the qualifier>

#Enable / disable the generation of a suffix for the features that use .qualifier.
#The generated suffix is computed according to the content of the feature
#generateFeatureVersionSuffix=true

############# BASE CONTROL #############
# Settings for the base Eclipse components and Java class libraries
# against which you are building.
# Base location for anything the build needs to compile against.  For example,
# in most RCP app or a plug-in,  the baseLocation should be the location of a previously
# installed Eclipse against which the application or plug-in code will be compiled and the RCP delta pack.

baseLocation=${eclipseLocation}
#Os/Ws/Arch/nl of the eclipse specified by baseLocation
baseos=linux
basews=gtk
basearch=x86

#this property indicates whether you want the set of plug-ins and features to be considered during the build to be limited to the ones reachable from the features / plugins being built
filteredDependencyCheck=false

#pluginPath is a list of locations in which to find plugins and features.  This list is separated by the platform file separator (; or :)
#a location is one of:
#- the location of the jar or folder that is the plugin or feature : /path/to/foo.jar or /path/to/foo
#- a directory that contains a /plugins or /features subdirectory
#- the location of a feature.xml, or for 2.1 style plugins, the plugin.xml or fragment.xml
#pluginPath=

skipBase=true
eclipseURL=<url for eclipse download site>
eclipseBuildId=<Id of Eclipse build to get>
eclipseBaseURL=${eclipseURL}/eclipse-platform-${eclipseBuildId}-win32.zip


############# MAP FILE CONTROL ################
# This section defines CVS tags to use when fetching the map files from the repository.
# If you want to fetch the map file from repository / location, change the getMapFiles target in the customTargets.xml

skipMaps=true
mapsRepo=:pserver:anonymous@example.com/path/to/repo
mapsRoot=path/to/maps
mapsCheckoutTag=HEAD

#tagMaps=true
mapsTagTag=v${buildId}


############ REPOSITORY CONTROL ###############
# This section defines properties parameterizing the repositories where plugins, fragments
# bundles and features are being obtained from.

# The tags to use when fetching elements to build.
# By default thebuilder will use whatever is in the maps.
# This value takes the form of a comma separated list of repository identifier (like used in the map files) and the
# overriding value
# For example fetchTag=CVS=HEAD, SVN=v20050101
# fetchTag=HEAD
skipFetch=true


############# JAVA COMPILER OPTIONS ##############
# The location of the Java jars to compile against.  Typically the rt.jar for your JDK/JRE
#bootclasspath=${java.home}/lib/rt.jar

# specific JRE locations to compile against. These values are used to compile bundles specifying a
# Bundle-RequiredExecutionEnvironment. Uncomment and set values for environments that you support
#CDC-1.0/Foundation-1.0= /path/to/rt.jar
#CDC-1.1/Foundation-1.1=
#OSGi/Minimum-1.0=
#OSGi/Minimum-1.1=
#JRE-1.1=
#J2SE-1.2=
#J2SE-1.3=
#J2SE-1.4=
#J2SE-1.5=C:/Program Files/Java/jdk1.5.0_16
#JavaSE-1.6=C:/Program Files/Java/jdk1.6.0_13
#PersonalJava-1.1=
#PersonalJava-1.2=
#CDC-1.0/PersonalBasis-1.0=
#CDC-1.0/PersonalJava-1.0=
#CDC-1.1/PersonalBasis-1.1=
#CDC-1.1/PersonalJava-1.1=

# Specify the output format of the compiler log when eclipse jdt is used
logExtension=.log

# Whether or not to include debug info in the output jars
javacDebugInfo=true

# Whether or not to fail the build if there are compiler errors
javacFailOnError=true

# Enable or disable verbose mode of the compiler
javacVerbose=true

# Extra arguments for the compiler. These are specific to the java compiler being used.
#compilerArg=

# Default value for the version of the source code. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacSource in build.properties
javacSource=1.5

# Default value for the version of the byte code targeted. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacTarget in build.properties.
javacTarget=1.5


