#     Copyright (C) 2007-2011  BlueXML - www.bluexml.com
# 
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.



## builder paths ##
#workspace=/Users/davidabad/Workspace2.0
workspace=/Users/davidabad/.hudson/jobs/SIDE_Enterprise_Product_Builder/workspace
builder=${workspace}/work
baseLocation=${builder}/eclipse
pdeBuildPluginVersion=3.5.1.R35x_20090820
equinoxLauncherPluginVersion=1.0.201.R35x_v20090715
deltapack=${baseLocation}/deltapack/eclipse
sideSources=${workspace}/sources
SIDE_HOME=${workspace}/S-IDE
distros=${workspace}/dist
logFile=build_pde-build_debug.log
## config ##
launcherName=side
# The prefix that will be used in the generated archive.
archivePrefix=SIDE
# ID of the build.  Used in naming the build output.
buildId=sideBuild
filteredDependencyCheck=false
flattenDependencies=true
parallelCompilation=false



			
###############################################################################
# Copyright (c) 2003, 2006 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
# 
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
product=${SIDE_HOME}/Integration/trunk/com.bluexml.side.Integration.eclipse.branding/side.product
#product=${sideSources}/plugins/com.bluexml.side.Integration.eclipse.branding/side.product
runPackager=true


p2.gathering=true
p2.metadata.repo=file:${builder}/repository
p2.artifact.repo=file:${builder}/repository
p2.category.site=file://${SIDE_HOME}/Integration/trunk/com.bluexml.side.Integration.buildHudson/config/site.xml

#Set the name of the archive that will result from the product build.
#archiveNamePrefix=



# The location underwhich all of the build output will be collected.
collectingFolder=${archivePrefix}

# The list of {os, ws, arch} configurations to build.  This 
# value is a '&' separated list of ',' separate triples.  For example, 
#     configs=win32,win32,x86 & linux,motif,x86
# By default the value is *,*,*
#configs = win32, win32, x86
#configs=win32, win32, x86 & \
#	linux, gtk, ppc &\
# linux, gtk, x86 & \
#	linux, gtk, x86_64 & \
#	linux, motif, x86 & \
#	solaris, motif, sparc & \
#	solaris, gtk, sparc & \
#	aix, motif, ppc & \
#	hpux, motif, PA_RISC & \
#	macosx, carbon, ppc
configs=linux, gtk, x86 & \
win32, win32, x86 & \
macosx, carbon, x86

# By default PDE creates one archive (result) per entry listed in the configs property.
# Setting this value to try will cause PDE to only create one output containing all
# artifacts for all the platforms listed in the configs property.
groupConfigurations=true

#Allow cycles involving at most one bundle that needs to be compiled with the rest being binary bundles.
#allowBinaryCycles = true

# Type of build.  Used in naming the build output.  Typically this value is
# one of I, N, M, S, ...
buildType=I


# Label for the build.  Used in naming the build output
buildLabel=${buildType}.${buildId}

# Timestamp for the build.  Used in naming the build output
timestamp=007

#this property indicates whether the resolution should be done in development mode (i.e. ignore multiple bundles with singletons)
#resolution.devMode=false

skipBase=true
skipMaps=true
skipFetch=true
mapsTagTag=v${buildId}

############# JAVA COMPILER OPTIONS ##############
# For this example:
# We specify the JRE locations for CDC-1.1/Foundation-1.1 and J2SE-1.5
# because these are the required execution environments defined for the 
# bundles in the example. 

# The location of the Java jars to compile against.  Typically the rt.jar for your JDK/JRE
#bootclasspath=${java.home}/lib/rt.jar

# If using an IBM VM, use
#bootclasspath=${java.home}/lib/core.jar;${java.home}/lib/vm.jar

# specific JRE locations to compile against. These values are used to compile bundles specifying a 
# Bundle-RequiredExecutionEnvironment. Uncomment and set values for environments that you support
#CDC-1.0/Foundation-1.0= /path/to/rt.jar
#CDC-1.1/Foundation-1.1=${java.home}/lib/rt.jar
#OSGi/Minimum-1.0=
#OSGi/Minimum-1.1=
#JRE-1.1=
#J2SE-1.2=
#J2SE-1.3=
#J2SE-1.4=
#J2SE-1.5=${java.home}/lib/rt.jar:${java.home}/lib/jce.jar
#JavaSE-1.6=${java.home}/lib/rt.jar:${java.home}/lib/jce.jar
#PersonalJava-1.1=
#PersonalJava-1.2=
#CDC-1.0/PersonalBasis-1.0=
#CDC-1.0/PersonalJava-1.0=
#CDC-1.1/PersonalBasis-1.1=
#CDC-1.1/PersonalJava-1.1=

# Specify the output format of the compiler log when eclipse jdt is used
logExtension=.log

# Whether or not to include debug info in the output jars
javacDebugInfo=true 

# Whether or not to fail the build if there are compiler errors
javacFailOnError=true

# Enable or disable verbose mode of the compiler
javacVerbose=true

# Extra arguments for the compiler. These are specific to the java compiler being used.
#compilerArg=

# Default value for the version of the source code. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacSource in build.properties
javacSource=1.5

# Default value for the version of the byte code targeted. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacTarget in build.properties.
javacTarget=1.5

